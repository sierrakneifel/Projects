{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNfBvpbn9CzKk1xhov5rFB+",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sierrakneifel/Projects/blob/main/IN502_Week_4.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Creating SLR Models"
      ],
      "metadata": {
        "id": "n9QbtL7MnMVe"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "r2jWr-DomZGE"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import scipy.stats as st\n",
        "import statsmodels.api as sm\n",
        "from statsmodels.formula.api import ols # Import the necessary modules\n",
        "\n",
        "nba = pd.read_csv(\"nbaallelo_slr.csv\") # Code to read in nbaallelo_slr.csv\n",
        "\n",
        "# Create a new column in the data frame that is the difference between pts and opp_pts\n",
        "nba['y'] = nba['pts'] - nba['opp_pts']\n",
        "#nba_new = nba.append(nba['pts'] - nba['opp_pts']) # Code to find the difference between the columns pts and opp_pts\n",
        "\n",
        "# Perform simple linear regression on y and elo_i\n",
        "results = ols('y ~ elo_i', data = nba).fit() # Code to perform SLR using statsmodels ols\n",
        "\n",
        "# Create an analysis of variance table\n",
        "aov_table = sm.stats.anova_lm(results, typ=2) # Code to create ANOVA table\n",
        "\n",
        "# Print the analysis of variance table\n",
        "print(aov_table)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Making Predictions using SLR Models"
      ],
      "metadata": {
        "id": "We8i_3thnSlj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "import statsmodels.formula.api as sms\n",
        "internet = pd.read_csv(\"internetusage.csv\") # load the file internetusage.csv\n",
        "\n",
        "model = sms.ols('internet_usage ~ bachelors_degree', data = internet).fit()\n",
        "\n",
        "#model = sm.OLS(x,y).fit() # fit a linear model using the sms.ols function and the internet dataframe\n",
        "#bach_percent = pd.DataFrame(np.array([input()])), columns = ['bachelors_degree']\n",
        "bach_percent = float(input())\n",
        "new_batch = pd.DataFrame(np.array([bach_percent]), columns = ['bachelors_degree'])\n",
        "\n",
        "prediction = model.predict(new_batch) #use the model.predict function to find the predicted value for internet_usage using\n",
        "print(prediction)"
      ],
      "metadata": {
        "id": "qdDhuQnknV1N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Creating Correlation Matrices"
      ],
      "metadata": {
        "id": "Hp23Cvq_nYJt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm # Import the necessary modules\n",
        "\n",
        "nba = pd.read_csv(\"nbaallelo_slr.csv\") # Code to read in nbaallelo_slr.csv\n",
        "\n",
        "# Display the correlation matrix for the columns elo_i, pts, and opp_pts\n",
        "new = pd.DataFrame(nba, columns = ['elo_i', 'pts', 'opp_pts'])\n",
        "newmatrix = new.corr()\n",
        "print(newmatrix)\n",
        "\n",
        "\n",
        "# Create a new column in the data frame that is the difference between pts and opp_pts\n",
        "nba['y'] = nba['pts'] - nba['opp_pts'] # Code to find the difference between the columns pts and opp_pts\n",
        "\n",
        "# Display the correlation matrix for elo_i and y\n",
        "matrix = pd.DataFrame(nba, columns = ['elo_i', 'y'])\n",
        "corrmatrix = matrix.corr()\n",
        "print(corrmatrix)"
      ],
      "metadata": {
        "id": "86_rh2hQnbaK"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
