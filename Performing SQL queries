{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1IyX_OOffVDeT8-TiEftDEgRGMrwZwZ7E",
      "authorship_tag": "ABX9TyNvqpb6WYxr4Rv+dfuSFhXZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sierrakneifel/Projects/blob/main/IN507_Unit3_Assignment2_Kneifel.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LvR6tTq7guvh",
        "outputId": "cf504219-2815-4042-e22f-a62cde3e243d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n",
            "Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install pandas #use PIP to install Pandas"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd #importing the necessary libraries\n",
        "import sqlite3\n",
        "\n",
        "input_schema = { #Defining the input schema\n",
        "  'Date': 'object',\n",
        "  'Open': 'float64',\n",
        "  'High': 'float64',\n",
        "  'Low': 'float64',\n",
        "  'Close': 'float64',\n",
        "  'Volume': 'float64',\n",
        "  'Ex-Dividend': 'float64',\n",
        "  'Split Ratio': 'float64',\n",
        "  'Adj. Open': 'float64',\n",
        "  'Adj. High': 'float64',\n",
        "  'Adj. Low': 'float64',\n",
        "  'Adj. Close': 'float64',\n",
        "  'Adj. Volume': 'float64',\n",
        "}\n",
        "\n",
        "destination_schema = { #defining the destination schema\n",
        "  'Date': 'DATE',\n",
        "  'Open': 'INTEGER',\n",
        "  'High': 'INTEGER',\n",
        "  'Low': 'INTEGER',\n",
        "  'Close': 'INTEGER',\n",
        "  'Volume': 'INTEGER',\n",
        "  'Ex-Dividend': 'INTEGER',\n",
        "  'Split Ratio': 'INTEGER',\n",
        "  'Adj. Open': 'FLOAT',\n",
        "  'Adj. High': 'FLOAT',\n",
        "  'Adj. Low': 'FLOAT',\n",
        "  'Adj. Close': 'FLOAT',\n",
        "  'Adj. Volume': 'INTEGER',\n",
        "  'Price_Change': 'FLOAT',\n",
        "  'Up_Down': 'TEXT'\n",
        "}"
      ],
      "metadata": {
        "id": "4WfDirq0gySi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "from google.colab import drive #After downloading data, mounting the drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RfzXUO20iawn",
        "outputId": "b727456b-c777-4d99-b116-ecdddda5fbe3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "url = '/content/target.csv' #Read in the data file from Google Drive\n",
        "data = pd.read_csv(url, index_col = False)\n",
        "data.head() #Investigate the first few lines"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "id": "aoHDM_g5i0iB",
        "outputId": "8180ec4c-4446-4597-8d99-07d7d8c513c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date   Open   High    Low  Close    Volume  Ex-Dividend  Split Ratio  \\\n",
              "0  1983-04-06  67.00  67.50  66.75  67.50   73000.0          0.0          1.0   \n",
              "1  1983-04-07  68.00  70.00  68.00  69.88  124700.0          0.0          1.0   \n",
              "2  1983-04-08  69.88  70.25  69.62  69.75   94400.0          0.0          1.0   \n",
              "3  1983-04-11  69.75  70.75  69.50  70.50   39400.0          0.0          1.0   \n",
              "4  1983-04-12  70.50  71.50  70.50  71.50   77300.0          0.0          1.0   \n",
              "\n",
              "   Adj. Open  Adj. High  Adj. Low  Adj. Close  Adj. Volume  \n",
              "0   1.645824   1.658106  1.639683    1.658106    1752000.0  \n",
              "1   1.670388   1.719517  1.670388    1.716570    2992800.0  \n",
              "2   1.716570   1.725659  1.710183    1.713376    2265600.0  \n",
              "3   1.713376   1.737941  1.707235    1.731800     945600.0  \n",
              "4   1.731800   1.756364  1.731800    1.756364    1855200.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61794ebc-8dde-4306-9844-09d487783513\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Ex-Dividend</th>\n",
              "      <th>Split Ratio</th>\n",
              "      <th>Adj. Open</th>\n",
              "      <th>Adj. High</th>\n",
              "      <th>Adj. Low</th>\n",
              "      <th>Adj. Close</th>\n",
              "      <th>Adj. Volume</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1983-04-06</td>\n",
              "      <td>67.00</td>\n",
              "      <td>67.50</td>\n",
              "      <td>66.75</td>\n",
              "      <td>67.50</td>\n",
              "      <td>73000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.645824</td>\n",
              "      <td>1.658106</td>\n",
              "      <td>1.639683</td>\n",
              "      <td>1.658106</td>\n",
              "      <td>1752000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1983-04-07</td>\n",
              "      <td>68.00</td>\n",
              "      <td>70.00</td>\n",
              "      <td>68.00</td>\n",
              "      <td>69.88</td>\n",
              "      <td>124700.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.670388</td>\n",
              "      <td>1.719517</td>\n",
              "      <td>1.670388</td>\n",
              "      <td>1.716570</td>\n",
              "      <td>2992800.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1983-04-08</td>\n",
              "      <td>69.88</td>\n",
              "      <td>70.25</td>\n",
              "      <td>69.62</td>\n",
              "      <td>69.75</td>\n",
              "      <td>94400.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.716570</td>\n",
              "      <td>1.725659</td>\n",
              "      <td>1.710183</td>\n",
              "      <td>1.713376</td>\n",
              "      <td>2265600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1983-04-11</td>\n",
              "      <td>69.75</td>\n",
              "      <td>70.75</td>\n",
              "      <td>69.50</td>\n",
              "      <td>70.50</td>\n",
              "      <td>39400.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.713376</td>\n",
              "      <td>1.737941</td>\n",
              "      <td>1.707235</td>\n",
              "      <td>1.731800</td>\n",
              "      <td>945600.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1983-04-12</td>\n",
              "      <td>70.50</td>\n",
              "      <td>71.50</td>\n",
              "      <td>70.50</td>\n",
              "      <td>71.50</td>\n",
              "      <td>77300.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.731800</td>\n",
              "      <td>1.756364</td>\n",
              "      <td>1.731800</td>\n",
              "      <td>1.756364</td>\n",
              "      <td>1855200.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61794ebc-8dde-4306-9844-09d487783513')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-61794ebc-8dde-4306-9844-09d487783513 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-61794ebc-8dde-4306-9844-09d487783513');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.rename(columns= { #Transform the data to match the destination SQLite schema\n",
        "    'Ex-Dividend': 'Ex_Dividend',\n",
        "    'Split Ratio': 'Split_Ratio',\n",
        "    'Adj. Open': 'Adj_Open',\n",
        "    'Adj. High': 'Adj_High',\n",
        "    'Adj. Low': 'Adj_Low',\n",
        "    'Adj. Close': 'Adj_Close',\n",
        "    'Adj. Volume': 'Adj_Volume'\n",
        "}, inplace=True)\n"
      ],
      "metadata": {
        "id": "WdoExCAojEd0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data['Price_Change'] = data ['Close'].diff() #Compute the new fields \"price_change\" and \"up_down\" then add to dataframe\n",
        "data['Up_Down'] = data.apply(lambda row: 'DOWN' if row['Open'] > row['Close'] else ('UP' if row ['Open'] < row ['Close'] else 'NOCHANGE'), axis = 1)"
      ],
      "metadata": {
        "id": "ls75UrJ1jwcX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "conn = sqlite3.connect('stock_data.db') #Connect to the SQLite database"
      ],
      "metadata": {
        "id": "DFbs6-VoknII"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.to_sql('stock_price', conn, if_exists = 'replace', index = False, dtype = destination_schema) #Load the transformed data into the SQLite table (create a table based on destination schema)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eQJ4S243ktEO",
        "outputId": "862d5e23-a726-4b68-dd0c-950b91410ccb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8818"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def query_table(): #Query the SQLite table to verify data is loaded into the database\n",
        "  query = \"SELECT * FROM stock_price;\" #Defining the function here and line before\n",
        "  result = pd.read_sql_query(query, conn)\n",
        "  result_df = pd.DataFrame(result) #Convert the results to a dataframe\n",
        "  print(result_df)\n"
      ],
      "metadata": {
        "id": "nRnjg1FyqxUe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "query_table() #Run the table"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qs_6fGo3rCTu",
        "outputId": "cf772543-7d52-4427-ee63-44f549f2ff78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            Date   Open   High    Low  Close   Volume  Ex_Dividend  \\\n",
            "0     1983-04-06  67.00  67.50  66.75  67.50    73000          0.0   \n",
            "1     1983-04-07  68.00  70.00  68.00  69.88   124700          0.0   \n",
            "2     1983-04-08  69.88  70.25  69.62  69.75    94400          0.0   \n",
            "3     1983-04-11  69.75  70.75  69.50  70.50    39400          0.0   \n",
            "4     1983-04-12  70.50  71.50  70.50  71.50    77300          0.0   \n",
            "...          ...    ...    ...    ...    ...      ...          ...   \n",
            "8813  2018-03-21  71.18  71.50  70.14  70.14  3782333          0.0   \n",
            "8814  2018-03-22  69.85  70.48  68.81  68.89  5292867          0.0   \n",
            "8815  2018-03-23  69.72  70.21  67.77  67.88  5137447          0.0   \n",
            "8816  2018-03-26  68.67  70.63  68.65  70.28  4875792          0.0   \n",
            "8817  2018-03-27  70.79  70.90  68.23  68.51  5828381          0.0   \n",
            "\n",
            "      Split_Ratio   Adj_Open   Adj_High    Adj_Low  Adj_Close  Adj_Volume  \\\n",
            "0             1.0   1.645824   1.658106   1.639683   1.658106   1752000.0   \n",
            "1             1.0   1.670388   1.719517   1.670388   1.716570   2992800.0   \n",
            "2             1.0   1.716570   1.725659   1.710183   1.713376   2265600.0   \n",
            "3             1.0   1.713376   1.737941   1.707235   1.731800    945600.0   \n",
            "4             1.0   1.731800   1.756364   1.731800   1.756364   1855200.0   \n",
            "...           ...        ...        ...        ...        ...         ...   \n",
            "8813          1.0  71.180000  71.500000  70.140000  70.140000   3782333.0   \n",
            "8814          1.0  69.850000  70.480000  68.810000  68.890000   5292867.0   \n",
            "8815          1.0  69.720000  70.210000  67.770000  67.880000   5137447.0   \n",
            "8816          1.0  68.670000  70.630000  68.650000  70.280000   4875792.0   \n",
            "8817          1.0  70.790000  70.900000  68.230000  68.510000   5828381.0   \n",
            "\n",
            "      Price_Change Up_Down  \n",
            "0              NaN      UP  \n",
            "1             2.38      UP  \n",
            "2            -0.13    DOWN  \n",
            "3             0.75      UP  \n",
            "4             1.00      UP  \n",
            "...            ...     ...  \n",
            "8813         -1.42    DOWN  \n",
            "8814         -1.25    DOWN  \n",
            "8815         -1.01    DOWN  \n",
            "8816          2.40      UP  \n",
            "8817         -1.77    DOWN  \n",
            "\n",
            "[8818 rows x 15 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conn.close() #Close the SQLite connection"
      ],
      "metadata": {
        "id": "pIEkvK23rFzv"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
